import streamlit as st
import os
from datetime import datetime

UPLOAD_FOLDER = "uploads"

# Buat folder jika belum ada
if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

st.set_page_config(page_title="📁 File Uploader", layout="centered")
st.title("📁 Website Upload File")
st.markdown("Unggah file dan simpan secara lokal ke folder `uploads/`.")

# =============================
# 📤 UPLOAD FILE
# =============================
uploaded_files = st.file_uploader("Pilih file untuk diunggah", type=None, accept_multiple_files=True)

if uploaded_files:
    for uploaded_file in uploaded_files:
        filename = uploaded_file.name
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        save_path = os.path.join(UPLOAD_FOLDER, f"{timestamp}_{filename}")
        with open(save_path, "wb") as f:
            f.write(uploaded_file.read())
    st.success(f"{len(uploaded_files)} file berhasil diunggah ke folder `{UPLOAD_FOLDER}/`")

# =============================
# 📂 TAMPILKAN FILE YANG SUDAH DIUNGGGAH
# =============================
st.subheader("📄 Daftar File yang Sudah Diunggah")

uploaded_file_list = os.listdir(UPLOAD_FOLDER)

if uploaded_file_list:
    uploaded_file_list.sort(reverse=True)
    for file in uploaded_file_list:
        file_path = os.path.join(UPLOAD_FOLDER, file)
        upload_time = datetime.fromtimestamp(os.path.getmtime(file_path)).strftime('%Y-%m-%d %H:%M:%S')
        st.write(f"📄 `{file}` — *diunggah pada* `{upload_time}`")
else:
    st.info("Belum ada file yang diunggah.")
